<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >

<head>
 <title>D3JS | Responsivnes</title>
<meta charset="utf-8">
<link href="Style.css" type="text/css" />
</head>

<body>
<div class="chart-container">

<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

    // Defining GETTERS & SETTERS
      var width = 1020,
      height = 720,
      // HTML5 CANVAS Arc Method
      T = 2 * Math.PI;

      // Defining Radius
      var arc = d3.svg.arc()
      .innerRadius(60)
      .outerRadius(85)
      .startAngle(0);

      // Transformation & Translation
      /*   var svg = d3.select("body").append("svg")
      .attr("width", width)
      .attr("height", height)
      .append("g")
      .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")") */ 

      var svg = d3.select('.chart-container').append("svg") 
      
      .attr("width", '100%')
      .attr("height", '100%')
      .attr('viewBox', '0 0 ' + Math.min(width, height) + ' ' + Math.min(width, height))
      .attr('preserveAspectRatio', 'xMinYMin')
      .append("g")
      .attr("transform", "translate(" + Math.min(width, height) / 2 + "," + Math.min(width, height) / 2 + ")");   

    // Background Property
      var background = svg.append("path")
      .datum({ endAngle: T })
      .style("fill", "YellowGreen")
      .attr("d", arc);

      // Foreground Property
      var foreground = svg.append("path")
      .datum({ endAngle: .120 * T })
      .style("fill", "grey")
      .attr("d", arc);
      
      // Functiong of the Wheel
    setInterval(function () 
    {
        foreground.transition()
      .duration(750)
      .call(arcTween, Math.random() * T);
    }, 1500);

    function arcTween(transition, newAngle) 
    {
        transition.attrTween("d", function (d) 
        {
            var interpolate = d3.interpolate(d.endAngle, newAngle);
            return function (t) 
            {
                d.endAngle = interpolate(t);
                return arc(d);
            };
        });
    }
</script>
</div>
</body>
</html>
